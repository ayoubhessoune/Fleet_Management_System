name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]
    
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: toor
          MYSQL_DATABASE: parcautodb
        ports:
          - 3306:3306
    steps:
    - uses: actions/checkout@v3
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B clean verify
    - name: run tests
      run: mvn -B test
    - name: Notify on build failure
      if: failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
        SLACK_MESSAGE: 'Build Failed :x:'
        SLACK_USERNAME: GithubActions
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

    - name: Notify on build success
      if: success()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
        SLACK_MESSAGE: 'Build Failed :x:'
        SLACK_USERNAME: GithubActions
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  analyze:
      runs-on: ubuntu-latest
      services:
        mysql:
          image: mysql:latest
          env:
            MYSQL_ROOT_PASSWORD: toor
            MYSQL_DATABASE: parcautodb
          ports:
            - 3306:3306
      needs: build
      steps:
        - uses: actions/checkout@v3
        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: 17
            distribution: 'temurin'
            cache: maven

        - name: Generate code coverage report
          run: mvn jacoco:report

  deploy:
    runs-on: ubuntu-latest
    needs: analyze
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build and Push to DockerHub
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ayoubhessoune/Fleet_Management_System:latest
